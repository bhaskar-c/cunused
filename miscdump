<?php
$needle = ".columns.three";
$haystack = "oh my dear .columns.three";
//$haystack = preg_replace("/$needle\.*\b/", 'God', $haystack);
$haystack = preg_replace("~(?<=^| )$needle(?= |$)~", 'God', $haystack);
echo $haystack;
/*
 * 
 * <style>.error{ color: red;} </style>
<?php

require_once 'simple_html_dom.php';
require_once 'cssparser.php';
/*
$html = file_get_html('test.html');
$stylesheet_url = 'test.css';
$css =  parse($stylesheet_url);

foreach(array_keys($css) as $cssitem)
	echo $cssitem . "------". (null !==($html->find(trim(explode(':', $cssitem, 2)[0]), 0)) ? 'used': 'unused') . "<br>";
	// trim explode of cssitme takes care of all pseudo classes.
*/


$cssfile = file_get_contents('test.css');
//echo "before=".$cssfile."<br>";
//$cssfile = preg_replace('!/\*.*?\*/!s', '', $cssfile); // remove all multiline comments

$html = file_get_html('test.html');
$stylesheet_url = 'test.css';
$css =  parse($stylesheet_url);



//pass 1 - remove unsued elements
foreach(array_keys($css) as $cssitem){
	echo $cssitem . "-". (null !==($html->find(trim(explode(':', $cssitem, 2)[0]), 0)) ? 'used': 'unused') ;
    if(null ==($html->find(trim(explode(':', $cssitem, 2)[0]), 0))) 
		 //echo "cssitem =".$cssitem."-";
		 //$cssitem  = trim($cssitem);
		 echo "-". preg_match("~(?<=^| )$cssitem(?= |$)~", $cssfile)."<br>";
		 //$cssfile = preg_replace("~(?<=^| )$cssitem(?= |$)~", ' ' ,   $cssfile);
		 //echo "cssfile =".$cssfile."<br>";
		 //global $cssfile;
		  //$cssfile = preg_replace("~(?<=^| )$cssitem(?= |$)~", '', $cssfile);
		  //echo strlen($cssfile)."<br>";
		 //echo $cssitem."<br>";
	 }	
		 //echo $cssitem."<br>";
		
		//echo strlen($cssfile);
		
//$cssfile = str_replace(';',";<br>", $cssfile);
//$cssfile = str_replace('}',"}<br>", $cssfile);

//pass 2 remove remaning definitions which have no selector of the format '/}\s{/'
//$cssfile = preg_replace('/}\s*{[^}]*}/','}', $cssfile);
echo "final file:".$cssfile;

//pass 3 replace ', {' with '{'
//to do


string[] inputs = { "& hmm& Swanand & Rashmi &", "&Swanand Rashmi&", "& Swanand & Rashmi &", "& Swanand&Rashmi &", "Swanand& & &Rashmi &." };
string remove = Regex.Escape("&");
string pattern = String.Format(@"(\b(?<!\w){0}\b|(?<=^|\s){0}(?=\s|$))", remove);
string replace = "And";
foreach (string input in inputs)
{
    string result = Regex.Replace(input, pattern, replace, RegexOptions.IgnoreCase);
    Console.WriteLine("Original: " + input);
    Console.WriteLine("Replace: " + result);
    Console.WriteLine();
}
